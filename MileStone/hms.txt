package com.wipro.hms.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

import com.wipro.hms.bean.RentalPropertyBean;
import com.wipro.hms.util.DBUtil;



public class RentalPropertyDAO {
	public String generatePropertyID(String city) {
		PreparedStatement pst =null;
		Connection con= DBUtil.getDBConnection();
		ResultSet rs= null;
		try{
		String sql="select RENTAL_SEQ.NEXTVAL from dual";
		pst=con.prepareStatement(sql);
		rs = pst.executeQuery();
		String id = city.substring(0,3).toUpperCase();
		while(rs.next())
		{
			id += rs.getString(1);
		}
		//Write your code here
		return id;
		}
		 catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		return null;
	}

	public int createRentalProperty(RentalPropertyBean bean) {
		PreparedStatement pst=null;
		Connection con = DBUtil.getDBConnection();
		int count=0;
		String sql="Insert into RENTAL_TBL values(?,?,?,?,?)";
		try {
				pst=con.prepareStatement(sql);
				pst.setString(1,generatePropertyID(bean.getCity()));
				pst.setDouble(2,bean.getRentalAmount());
				pst.setInt(3,bean.getNoOfBedRooms());
				pst.setString(4,bean.getLocation());
				pst.setString(5,bean.getCity());
				
				count=pst.executeUpdate();
				System.out.println(count);
				if(count>0){
					return count;
				}
			} catch (Exception e) {
					count=-1;
			}
		return count;
	}
}
---------------------------------------------------------------------------------------------------------

package com.wipro.hms.service;

import java.util.ArrayList;
import java.util.List;

import com.wipro.hms.bean.RentalPropertyBean;
import com.wipro.hms.dao.RentalPropertyDAO;
import com.wipro.hms.util.InvalidCityException;

public class RentalPropertyService {
	public static void main(String[] args) {
		RentalPropertyDAO b=new RentalPropertyDAO();
		RentalPropertyBean bean=new RentalPropertyBean();
		bean.setCity("Chennai");
		bean.setLocation("Velachery");
		bean.setNoOfBedRooms(2);
		bean.setRentalAmount(15000);
		System.out.println(b.generatePropertyID(bean.getCity()));
		System.out.println(b.createRentalProperty(bean));
	}

	public String addRentalProperty(RentalPropertyBean bean) {
		
		String status="";
		//Write your code here
		
		String city=bean.getCity();
		String location=bean.getLocation();
		int bedno= bean.getNoOfBedRooms();
		double amount= bean.getRentalAmount();
		if(city==null||location==null){
			status="NULL VALUES IN INPUT";
		}
		else if((city.length()==0||location.length()==0)||(bedno==0||amount==0)){
			status="INVALID INPUT";
		}
		else if(!(city.equalsIgnoreCase("bengaluru")||city.equalsIgnoreCase("chennai"))){
			status="INVALID CITY";
		}
		else if(city.equalsIgnoreCase("bengaluru")||city.equalsIgnoreCase("chennai")){
			RentalPropertyDAO b=new RentalPropertyDAO();
			int count=b.createRentalProperty(bean);
			if(count>0){
				status="SUCCESS";
			}
			else{
				status="FAILURE";
			}
		}
	
		return status;
	}

	
	public void validateCity(String city) throws InvalidCityException {
		//Write your code here	
				if(!(city.equalsIgnoreCase("bengaluru")||city.equalsIgnoreCase("chennai"))){
				new InvalidCityException();
				}		
	}
}

