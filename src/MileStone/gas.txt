package com.wipro.gbs.bean;

import java.util.Date;

public class GasBookingBean {
	String userName;
	int bookingNumber;
	Date booking_date;
	String delivery_status;
	public String getUserName() {
		return userName;
	}
	public void setUserName(String userName) {
		this.userName = userName;
	}
	public int getBookingNumber() {
		return bookingNumber;
	}
	public void setBookingNumber(int bookingNumber) {
		this.bookingNumber = bookingNumber;
	}
	public Date getBooking_date() {
		return booking_date;
	}
	public void setBooking_date(Date booking_date) {
		this.booking_date = booking_date;
	}
	public String getDelivery_status() {
		return delivery_status;
	}
	public void setDelivery_status(String delivery_status) {
		this.delivery_status = delivery_status;
	}
}

---------------------------------------------------------------------------------------------------------------------------------------------------------------------

package com.wipro.gbs.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

import com.wipro.gbs.bean.GasBookingBean;
import com.wipro.gbs.util.DBUtil;

public class GasBookingDAO {

	public int generateBookingNumber() throws SQLException {
		// Write your code here
		int id = 0;
		Connection connection = DBUtil.getDBConnection();
		String query = "select GasBooking_seq.nextval from dual";
		PreparedStatement preparedStatement = connection.prepareStatement(query);
		ResultSet resultSet = preparedStatement.executeQuery();
		if (resultSet.next()) {
			id = resultSet.getInt(1);
		}
		return id;
	}

	public String createBooking(GasBookingBean bean) throws SQLException {
		// Write your code here
		/*
		 * This function should return SUCCESS on successful insertion of the
		 * record to the GASBOOKING_TABLE, else the function should return
		 * FAILURE
		 */
		java.sql.Date date = new java.sql.Date(bean.getBooking_date().getTime());
		if (bean.getUserName().length() > 10) {
			return "FAILURE";
		}
		Connection connection = DBUtil.getDBConnection();
		String query = "insert into GASBOOKING_TABLE values(?,?,?,?)";
		PreparedStatement preparedStatement = connection.prepareStatement(query);
		preparedStatement.setString(1, bean.getUserName());
		preparedStatement.setInt(2, bean.getBookingNumber());
		preparedStatement.setDate(3, date);
		preparedStatement.setString(4, bean.getDelivery_status());

		if (preparedStatement.executeUpdate() > 0)
			return "SUCCESS";
		else
			return "FAILURE";

	}

	public boolean canNewBookingBeDone(String username) throws SQLException {
		// Write your code here
		/*
		 * This function should return true if the given username has no
		 * bookings with Not Delivered status. Else the function should return
		 * false
		 */

		Connection connection = DBUtil.getDBConnection();
		String query = "select Delivery_status from GASBOOKING_TABLE where User_name=?";
		PreparedStatement preparedStatement = connection.prepareStatement(query);
		preparedStatement.setString(1, username);
		ResultSet rSet = preparedStatement.executeQuery();
		if (rSet.next()) {
			String ans = rSet.getString(1);
			if (ans.equals("Delivered")) {
				System.out.println(rSet.getString(1));
				return true;
			} else {
				return false;
			}
		}
		return true;
	}
}
--------------------------------------------------------------------------------------------------------------------------------------------------------------------

package com.wipro.gbs.service;

import java.sql.SQLException;

import com.wipro.gbs.bean.GasBookingBean;
import com.wipro.gbs.dao.GasBookingDAO;
import com.wipro.gbs.util.InvalidDataException;

public class Administrator {
	public static void main(String[] args) {
		// Write your code here
	}

	public String createBooking(GasBookingBean bean) throws SQLException {
		// Write your code here
		/*
		 * 
		 * public String createBooking(GasBookingBean bean)
		 * 
		 * · Invalid Conditions
		 * 
		 * The function should throw InvalidDataException under the following
		 * conditions
		 * 
		 * 1. If the bean is null
		 * 
		 * 2. If the bean’s username is null or empty string
		 * 
		 * The exception should be caught in the same function itself, and the
		 * function should return INVALID DATA
		 * 
		 * · If all values are valid then the following needs to be done
		 * 
		 * Ø First, the canNewBookingBeDone method of the DAO needs to be
		 * called.
		 * 
		 * 1. If canNewBookingBeDone method returns true, then do the below
		 * steps.
		 * 
		 * § Set the delivery status attribute in bean to “Not Delivered”.
		 * 
		 * § A new Booking Number needs to be generated by invoking the
		 * generateBookingId method from DAO and the value to be assigned to the
		 * BookingNumber attribute.
		 * 
		 * § Invoke the createBooking method of the DAO and return its value
		 * 
		 * 2. If canNewBookingBeDone method returns false, this method should
		 * return “You have already done a booking”
		 * 
		 */

		/*
		 * Test to insert Invalid bean object into table expected:<[FAILURE]>
		 * but was:<[You have already done a booking]>
		 * 
		 * 
		 * 
		 */
		GasBookingDAO dao = new GasBookingDAO();
		if (bean == null || bean.getUserName() == "" || bean.getUserName() == null) {
			try {
				throw new InvalidDataException();
			} catch (InvalidDataException e) {
				return "INVALID DATA";
			}
		}

		if (dao.canNewBookingBeDone(bean.getUserName())) {
			bean.setDelivery_status("Not Delivered");
			bean.setBookingNumber(dao.generateBookingNumber());
			String res = dao.createBooking(bean);
			System.out.println(res);
			return res;
		} else {
			return "You have already done a booking";
		}

	}
}
------------------------------------------------------------------------------------------------------------------------------------------------------------------
package com.wipro.gbs.util;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;

public class DBUtil {

	public static Connection getDBConnection() {
		Connection con = null;
		String url = "jdbc:oracle:thin:@localhost:1521:orcl";
		String user = "B7854520051980";
		String password = "B7854520051980";
		try {
			Class.forName("oracle.jdbc.driver.OracleDriver");
			con = DriverManager.getConnection(url, user, password);
			return con;
		} catch (ClassNotFoundException e) {
			e.printStackTrace();
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return con;
	}
}
---------------------------------------------------------------------------------------------------
